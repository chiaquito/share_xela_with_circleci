"""
Django settings for share_xela project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ 



env_dir  = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
env_file = os.path.join(env_dir, ".env")
env = environ.Env()
env.read_env(env_file)



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')




# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_user_agents',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'corsheaders',    
    'django.contrib.gis',
    'djgeojson',
    'phonenumber_field',
    'tempus_dominus',
    'avisos',
    'api',
    'categories',
    'contacts',
    'direct_messages',
    'favorite',
    'feedback',
    'maps',
    'mypages',
    'item_contacts',
    'items',
    'prefecturas',
    'profiles',
    'solicitudes',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]


ROOT_URLCONF = 'config.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'config', 'templates'),
                 os.path.join(BASE_DIR, 'config', 'templates', 'allauth') ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases



"""
DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        #'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        #'NAME': 'test_geodjango',
        'NAME': 'postgis_test',
        'PORT': '5432',
        'USER': 'geodjango_user',
        'PASSWORD': 'geodjango1990',


    }
}

"""



DATABASES = {
    'default': {
        'ENGINE': os.environ.get("DATABASE_ENGINE"),
        'NAME': os.environ.get("DATABASE_DB"),
        'PORT': os.environ.get("DATABASE_PORT"),
        'USER': os.environ.get("DATABASE_USER"),
        'HOST': os.environ.get('DATABASE_HOST', default='localhost'),
        'PASSWORD': os.environ.get("DATABASE_PASSWORD"),
        'TEST':{"NAME" : "test_postgis_db"},
    }
}





# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]





##############################
### login&logout redirect  ###
##############################

LOGIN_URL = 'login'          # ログインしていないときのリダイレクト先
#LOGIN_REDIRECT_URL = 'home'  # ログイン後のリダイレクト先
LOGIN_REDIRECT_URL = 'check_profile'  # ログイン後のリダイレクト先
LOGOUT_REDIRECT_URL = 'home' # ログアウト後のリダイレクト先




#################################
###  allauth  Authentication   ##
#################################

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    )
#　認証方式を「メールアドレスとパスワード」に変更
ACCOUNT_AUTHENTICATION_METHOD = 'email'
#　ユーザー名は使用しない
ACCOUNT_USERNAME_REQUIRED = False

# ユーザー登録確認メールは送信しない
ACCOUNT_EMAIL_VERIFICATION = 'none'
# メールアドレスを必須項目にする
ACCOUNT_EMAIL_REQUIRED = True

SITE_ID = 1


SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'METHOD': 'oauth2', #'js_sdk'
        'SCOPE': ['email', 'public_profile', ], #'user_friends'
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time',
        ],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': 'path.to.callable',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v2.12',
    },
     'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}


###################################
##  allauth  カスタムFormの宣言  ####
###################################
ACCOUNT_FORMS = {'login': 'config.forms.MyCustomLoginForm',
                'signup': 'config.forms.MyCustomSignupForm',}


###################################
## request.session使用のための設定 ##
###################################
SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'



###################################
##       django_user_agents      ##
###################################

# キャッシュを使うとdjango-user-agentsを素早く働かせることができる

CACHES = {
    'default': {
        'BACKEND': os.environ.get("CACHE_BACKEND"),
        'LOCATION': os.environ.get("CACHE_LOCATION"),
    }
}


#　キャッシュを使わない場合はNoneと記述。キャッシュを使う場合は基本的には'default'を使う
USER_AGENTS_CACHE = 'default'






##########################################
###        Django-Rest-Framework       ###
##########################################


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
           'rest_framework.authentication.TokenAuthentication',
           'rest_framework.authentication.BasicAuthentication',
       ),
       'DEFAULT_PERMISSION_CLASSES': (

            # https://www.django-rest-framework.org/api-guide/permissions/#setting-the-permission-policy
            #'rest_framework.permissions.IsAdminUser',
            #'rest_framework.permissions.IsAuthenticated',
            #'rest_framework.permissions.AllowAny',

       ),
    }



###############################################
###            django-rest-auth             ###
###############################################

#https://django-rest-auth.readthedocs.io/en/latest/index.html

# https://django-rest-auth.readthedocs.io/en/latest/api_endpoints.html
OLD_PASSWORD_FIELD_ENABLED = True
LOGOUT_ON_PASSWORD_CHANGE = False


#signupのviewをProfileオブジェクトを返す仕組みに変更する。



####################################################################
## CORS dockerによるcross originによる通信を許可 (django-cors-headers)   ##
####################################################################
# https://github.com/adamchainz/django-cors-headers


CORS_ALLOW_CREDENTIALS = False

CORS_ORIGIN_WHITELIST = [
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    #'https://sharexela.ga',
]




#####################################
##         Email settings          ##
#####################################
#危険なのでdjango-environをインストールして使用するようにする

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
#SENDGRID_API_KEY = "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"
#SENDGRID_API_KEY = env("SENDGRID_API_KEY")
SENDGRID_API_KEY = os.environ.get("SENDGRID_API_KEY")

SENDGRID_SANDBOX_MODE_IN_DEBUG = False
DEFAULT_FROM_EMAIL = 'no-reply <no-reply@sharexela.ga>'




#####################################
####      upload file size       ####
#####################################
# https://stackoverrun.com/ja/q/12297638
# https://docs.djangoproject.com/en/2.2/ref/settings/#std:setting-FILE_UPLOAD_MAX_MEMORY_SIZE

#djangoのファイルアップロード(画像)のデータサイズ許容量を上昇させる。

#FILE_UPLOAD_MAX_MEMORY_SIZE = 5242880
FILE_UPLOAD_MAX_MEMORY_SIZE = 9437184


